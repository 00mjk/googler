#!/usr/bin/env python3

import argparse
import json
import re
import sys
import urllib.parse
import urllib.request

HTML_TAG = re.compile(r'<[^>]+>')

# Anything can go wrong in this function. You should be prepared to
# catch anything and everything. However, if things are good, you should
# expect a list of strings with your specified prefix. Or maybe not. Who
# knows.
def fetch_completions(prefix):
    # There's an hl query param for specifying the language. I'm just
    # ignoring that for now.
    api_url = ('https://www.google.com/complete/search?client=psy-ab&q=%s' %
               urllib.parse.quote(prefix, safe=''))
    # A timeout of 3 seconds seems to be overly generous.
    resp = urllib.request.urlopen(api_url, timeout=3)
    respobj = json.load(resp)

    # The response object should look like
    #
    # ['git',
    #  [['git<b>hub</b>', 0],
    #   ['git', 0],
    #   ['git<b>lab</b>', 0],
    #   ['git<b> stash</b>', 0]],
    #  {'q': 'oooAhRzoChqNmMbNaaDKXk1YY4k', 't': {'bpc': False, 'tlw': False}}]
    #
    # Note the each result entry need not have two members; e.g., for
    # 'gi', there is an entry ['gi<b>f</b>', 0, [131]].
    return [HTML_TAG.sub('', entry[0]) for entry in respobj[1]]

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('prefix')
    parser.add_argument('--debug', action='store_true')
    args = parser.parse_args()

    try:
        completions = fetch_completions(args.prefix)
        print('\n'.join(completions))
        sys.exit(0)
    except Exception:
        if args.debug:
            raise
        sys.exit(1)

if __name__ == '__main__':
    main()
